# Copyright (c) 2019, Amazon.com, Inc. or its affiliates. All Rights Reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation. Amazon designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.


%global java_home %{_jvmdir}/%{name}.%{_arch}

# Higher numbers win for the alternatives program.
%global alternatives_priority 1000

# Instruct rpmbuild to copy jars rather than de-compress and re-compress.
%global __jar_repack 0

# Don't create a separate debug package. Specifically disables running
# this script:
# https://github.com/rpm-software-management/rpm/blob/master/scripts/find-debuginfo.sh
%define debug_package %{nil}

# abs2rel: A macro to convert an absolute path to a relative path.
# When making a symlink in an RPM, prefer a symbolic link to ensure
# the link will work in a chroot environment.
%global script 'use File::Spec; print File::Spec->abs2rel(\$ARGV[0], \$ARGV[1])'
%global abs2rel %{__perl} -e %{script}

Summary: Amazon Corretto development environment
Name: ${rpmName}
Version: ${rpmVersion}
Release: ${version.revision}%{?dist}
Epoch: 1
Group: Development/Languages
AutoReqProv: 0
License: ${packageInfo.license}
Vendor: ${packageInfo.vendor}
Url: ${packageInfo.url}
Source0: $sourceTar
ExclusiveArch: x86_64

# jpackage-utils is required for both build and runtime.
# For build, it provides the jvmdir macro. For runtime,
# it provides the /usr/lib/jvm directory.
BuildRequires: jpackage-utils
BuildRequires: java-11-devel
BuildRequires: autoconf
BuildRequires: make
BuildRequires: alsa-lib-devel
BuildRequires: binutils
BuildRequires: which
BuildRequires: cups-devel
BuildRequires: fontconfig-devel
BuildRequires: freetype-devel
BuildRequires: giflib-devel
BuildRequires: gcc-c++
BuildRequires: libjpeg-devel
BuildRequires: libpng-devel
BuildRequires: libxslt
BuildRequires: libX11-devel
BuildRequires: libXi-devel
BuildRequires: libXinerama-devel
BuildRequires: libXt-devel
BuildRequires: libXrender-devel
BuildRequires: libXtst-devel
BuildRequires: pkgconfig
BuildRequires: xorg-x11-proto-devel

Requires: libX11
Requires: libXi
Requires: libXinerama
Requires: libXt
Requires: libXrender
Requires: libXtst
Requires: alsa-lib
Requires: giflib
Requires: libjpeg
Requires: libpng
Requires: dejavu-sans-fonts
Requires: dejavu-serif-fonts
Requires: dejavu-sans-mono-fonts
# Require headless package.
Requires: %{name}-headless%{?_isa} = %{epoch}:%{version}-%{release}


Provides: java = %{epoch}:${version.major}
Provides: java-${version.major} = %{epoch}:${version.major}.${version.minor}.${version.security}

%package headless
Summary: Amazon Corretto headless development environment
Group:   Development/Tools
AutoReqProv: 0

Requires: jpackage-utils
Requires: zlib
Requires: fontconfig
Requires: freetype
Requires: ca-certificates
Requires(post): chkconfig
Requires(postun): chkconfig

%description
${packageInfo.description}

%description headless
${packageInfo.description} (Headless environment)

%prep
%setup -q

%build
cd src
bash ./configure \\
        --with-jvm-features=zgc \\
        --with-version-feature="${version.major}" \\
        --with-freetype=system \\
        --with-libjpeg=system \\
        --with-giflib=system \\
        --with-libpng=system \\
        --with-zlib=system \\
        --with-version-opt= \\
        --with-version-string="${version.major}.${version.minor}.${version.security}" \\
        --with-version-build="${version.build}" \\
        --with-vendor-version-string="Corretto-${version.full}" \\
        --with-version-pre= \\
        --with-vendor-name="Amazon.com Inc." \\
        --with-vendor-url="https://aws.amazon.com/corretto/" \\
        --with-vendor-bug-url="https://github.com/corretto/corretto-${version.major}/issues/" \\
        --with-debug-level=release \\
        --with-native-debug-symbols=none

make images

%install
rm -rf %{buildroot}
install -d -m 755 %{buildroot}%{java_home}
cp -a src/build/linux-%{_arch}-normal-server-release/images/jdk/* %{buildroot}%{java_home}
rm -rf %{buildroot}%{java_home}/demo

# Make a *relative* symlink pointing to the cacerts file from ca-certificates.
rm -f %{buildroot}%{java_home}/lib/security/cacerts
pushd %{buildroot}%{java_home}/lib/security
  RELATIVE=\$(%{abs2rel} %{_sysconfdir}/pki/java %{buildroot}%{java_home}/lib/security)
  ln -sf \$RELATIVE/cacerts .
popd

%post headless
if [ \$1 -eq 1 ] ; then
  alternatives --install %{_bindir}/java java %{java_home}/bin/java %{alternatives_priority} \\
               --slave %{_bindir}/jaotc jaotc %{java_home}/bin/jaotc \\
               --slave %{_bindir}/jar jar %{java_home}/bin/jar \\
               --slave %{_bindir}/jarsigner jarsigner %{java_home}/bin/jarsigner \\
               --slave %{_bindir}/javac javac %{java_home}/bin/javac \\
               --slave %{_bindir}/javadoc javadoc %{java_home}/bin/javadoc \\
               --slave %{_bindir}/javap javap %{java_home}/bin/javap \\
               --slave %{_bindir}/jcmd jcmd %{java_home}/bin/jcmd \\
               --slave %{_bindir}/jconsole jconsole %{java_home}/bin/jconsole \\
               --slave %{_bindir}/jdb jdb %{java_home}/bin/jdb \\
               --slave %{_bindir}/jdeprscan jdeprscan %{java_home}/bin/jdeprscan \\
               --slave %{_bindir}/jdeps jdeps %{java_home}/bin/jdeps \\
               --slave %{_bindir}/jhsdb jhsdb %{java_home}/bin/jhsdb \\
               --slave %{_bindir}/jimage jimage %{java_home}/bin/jimage \\
               --slave %{_bindir}/jinfo jinfo %{java_home}/bin/jinfo \\
               --slave %{_bindir}/jjs jjs %{java_home}/bin/jjs \\
               --slave %{_bindir}/jlink jlink %{java_home}/bin/jlink \\
               --slave %{_bindir}/jmap jmap %{java_home}/bin/jmap \\
               --slave %{_bindir}/jmod jmod %{java_home}/bin/jmod \\
               --slave %{_bindir}/jps jps %{java_home}/bin/jps \\
               --slave %{_bindir}/jrunscript jrunscript %{java_home}/bin/jrunscript \\
               --slave %{_bindir}/jshell jshell %{java_home}/bin/jshell \\
               --slave %{_bindir}/jstack jstack %{java_home}/bin/jstack \\
               --slave %{_bindir}/jstat jstat %{java_home}/bin/jstat \\
               --slave %{_bindir}/jstatd jstatd %{java_home}/bin/jstatd \\
               --slave %{_bindir}/keytool keytool %{java_home}/bin/keytool \\
               --slave %{_bindir}/pack200 pack200 %{java_home}/bin/pack200 \\
               --slave %{_bindir}/rmic rmic %{java_home}/bin/rmic \\
               --slave %{_bindir}/rmid rmid %{java_home}/bin/rmid \\
               --slave %{_bindir}/rmiregistry rmiregistry %{java_home}/bin/rmiregistry \\
               --slave %{_bindir}/serialver serialver %{java_home}/bin/serialver \\
               --slave %{_bindir}/unpack200 unpack200 %{java_home}/bin/unpack200 \\
               --slave %{_mandir}/man1/jar.1 jar.1 %{java_home}/man/man1/jar.1 \\
               --slave %{_mandir}/man1/jarsigner.1 jarsigner.1 %{java_home}/man/man1/jarsigner.1 \\
               --slave %{_mandir}/man1/java.1 java.1 %{java_home}/man/man1/java.1 \\
               --slave %{_mandir}/man1/javac.1 javac.1 %{java_home}/man/man1/javac.1 \\
               --slave %{_mandir}/man1/javadoc.1 javadoc.1 %{java_home}/man/man1/javadoc.1 \\
               --slave %{_mandir}/man1/javap.1 javap.1 %{java_home}/man/man1/javap.1 \\
               --slave %{_mandir}/man1/jcmd.1 jcmd.1 %{java_home}/man/man1/jcmd.1 \\
               --slave %{_mandir}/man1/jconsole.1 jconsole.1 %{java_home}/man/man1/jconsole.1 \\
               --slave %{_mandir}/man1/jdb.1 jdb.1 %{java_home}/man/man1/jdb.1 \\
               --slave %{_mandir}/man1/jdeps.1 jdeps.1 %{java_home}/man/man1/jdeps.1 \\
               --slave %{_mandir}/man1/jinfo.1 jinfo.1 %{java_home}/man/man1/jinfo.1 \\
               --slave %{_mandir}/man1/jjs.1 jjs.1 %{java_home}/man/man1/jjs.1 \\
               --slave %{_mandir}/man1/jmap.1 jmap.1 %{java_home}/man/man1/jmap.1 \\
               --slave %{_mandir}/man1/jps.1 jps.1 %{java_home}/man/man1/jps.1 \\
               --slave %{_mandir}/man1/jrunscript.1 jrunscript.1 %{java_home}/man/man1/jrunscript.1 \\
               --slave %{_mandir}/man1/jstack.1 jstack.1 %{java_home}/man/man1/jstack.1 \\
               --slave %{_mandir}/man1/jstat.1 jstat.1 %{java_home}/man/man1/jstat.1 \\
               --slave %{_mandir}/man1/jstatd.1 jstatd.1 %{java_home}/man/man1/jstatd.1 \\
               --slave %{_mandir}/man1/keytool.1 keytool.1 %{java_home}/man/man1/keytool.1 \\
               --slave %{_mandir}/man1/pack200.1 pack200.1 %{java_home}/man/man1/pack200.1 \\
               --slave %{_mandir}/man1/rmic.1 rmic.1 %{java_home}/man/man1/rmic.1 \\
               --slave %{_mandir}/man1/rmid.1 rmid.1 %{java_home}/man/man1/rmid.1 \\
               --slave %{_mandir}/man1/rmiregistry.1 rmiregistry.1 %{java_home}/man/man1/rmiregistry.1 \\
               --slave %{_mandir}/man1/serialver.1 serialver.1 %{java_home}/man/man1/serialver.1 \\
               --slave %{_mandir}/man1/unpack200.1 unpack200.1 %{java_home}/man/man1/unpack200.1
fi

%postun headless
if [ \$1 -eq 0 ] ; then
  alternatives --remove java %{java_home}/bin/java
fi

# The headfull variant adds RPM dependencies, but not files.
%files

%files headless
%{java_home}
