/*
* Copyright (c) 2019, Amazon.com, Inc. or its affiliates. All Rights Reserved.
* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
*
* This code is free software; you can redistribute it and/or modify it
* under the terms of the GNU General Public License version 2 only, as
* published by the Free Software Foundation. Amazon designates this
* particular file as subject to the "Classpath" exception as provided
* by Oracle in the LICENSE file that accompanied this code.
*
* This code is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
* FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
* version 2 for more details (a copy is included in the LICENSE file that
* accompanied this code).
*
* You should have received a copy of the GNU General Public License version
* 2 along with this work; if not, write to the Free Software Foundation,
* Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
*/

import groovy.text.GStringTemplateEngine

dependencies {
    compile project(path: ':openjdksrc', configuration: 'archives')
}

// Matches Red Hat's naming convention of java-version-provider:
// https://developers.redhat.com/articles/using-java-rhel-7-openjdk-8/
def rpmName = 'java-11-amazon-corretto'
// Matches the 'full version' from Java's release notes:
// https://www.oracle.com/technetwork/java/javase/11-0-2-relnotes-5188746.html
// Eg: 11.0.2+7
def rpmVersion = "${version.major}.${version.minor}.${version.security}+${version.build}"

/**
 * Apply version numbers to the RPM spec file template and copy
 * to the build root.
 */
task inflateRpmSpec {
    inputs.file 'java-11-amazon-corretto.spec.template'
    outputs.file "$buildDir/java-11-amazon-corretto.spec"
    doLast {
        def renderedTemplate = new GStringTemplateEngine()
                .createTemplate(file('java-11-amazon-corretto.spec.template'))
                .make(
                [
                        rpmName    : rpmName,
                        rpmVersion : rpmVersion,
                        version    : project.version,
                        sourceTar  : project.configurations.compile.singleFile.name,
                        packageInfo: packageInfo
                ])
        outputs.files.singleFile.text = renderedTemplate
    }
}

task copySourceTar(type: Tar) {
    dependsOn project.configurations.compile, inflateRpmSpec
    compression Compression.GZIP
    archiveName project.configurations.compile.singleFile.name
    from("$buildDir") {
        include 'java-11-amazon-corretto.spec'
        into 'rpm'
    }
    from tarTree(project.configurations.compile.singleFile)
    into "$rpmName-$rpmVersion"
}

artifacts {
    archives copySourceTar
}
